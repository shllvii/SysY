v0 = 0
v1 = malloc 40
  // line: 3 -> f_main [0]
f_main [0] [32]
  // line: 4 -> var T2
  // line: 5 -> var T3
  // line: 6 -> var t0
  // line: 7 -> var t1
  // line: 8 -> var t2
  // line: 9 -> T0 = call f_getint
call f_getint
load v0 t0
t0 = a0
    // store global 
loadaddr v0 t6
t6 = t6 + x0
t6 [0] = t0
  // line: 10 -> if T0 <= 10 goto l0
load v0 t1
t2 = 10
if t1 <= t2 goto l0
  // line: 11 -> return 1
a0 = 1
return
  // line: 12 -> l0:
l0:
  // line: 13 -> T2 = 0
load 27 t3
t3 = 0
store t3 27
  // line: 14 -> T3 = T2
load 28 t4
load 27 t5
t4 = t5
store t4 28
  // line: 15 -> l1:
l1:
  // line: 16 -> if T2 >= T0 goto l2
load 27 t0
load v0 t1
if t0 >= t1 goto l2
  // line: 17 -> t0 = call f_getint
call f_getint
load 29 t2
t2 = a0
store t2 29
  // line: 18 -> t1 = T2 * 4
load 30 t3
load 27 t4
t3 = t4 * 4
store t3 30
  // line: 19 -> T1[t1] = t0
loadaddr v1 t5
load 29 t0
load 30 t1
    // store global 
loadaddr v1 t6
t6 = t6 + t1
t6 [0] = t0
  // line: 20 -> t2 = T1[t1]
load 31 t2
loadaddr v1 t3
load 30 t4
t2 = t3 + t4
t2 = t2 [0]
store t2 31
  // line: 21 -> T3 = T3 + t2
load 28 t5
load 28 t0
load 31 t1
t5 = t0 + t1
store t5 28
  // line: 22 -> T2 = T2 + 1
load 27 t2
load 27 t3
t2 = t3 + 1
store t2 27
  // line: 23 -> goto l1
goto l1
  // line: 24 -> l2:
l2:
  // line: 25 -> param T3
store a0 18
load 28 t4
a0 = t4
  // line: 26 -> call f_putint
call f_putint
  // line: 27 -> return 0
a0 = 0
return
  // line: 28 -> end f_main
end f_main
