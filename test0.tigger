v0 = 0
v1 = malloc 40
  // line: 3 -> f_main [0] 
f_main [0] [33]
store s0 0
store s1 1
store s2 2
store s3 3
store s4 4
store s5 5
  // line: 4 -> var T2 
loadaddr v1 s0
  // line: 5 -> var T3 
  // line: 6 -> var t0 
  // line: 7 -> var t1 
  // line: 8 -> var t2 
  // line: 9 -> T0 = call f_getint 
call f_getint
s1 = a0
load 18 a0
load v0 s1
  // line: 10 -> if T0 <= 10 goto l0 
s11 = x0 + 10
if s1 <= s11 goto l0
  // line: 11 -> return 1 
t5 = x0 + 1
a0 = t5
load 0 s0
load 1 s1
load 2 s2
load 3 s3
load 4 s4
load 5 s5
return
  // line: 12 -> l0: 
l0:
  // line: 13 -> T2 = 0 
s2 = 0
  // line: 14 -> T3 = T2 
s3 = s2
  // line: 15 -> l1: 
l1:
  // line: 16 -> if T2 >= T0 goto l2 
if s2 >= s1 goto l2
  // line: 17 -> t0 = call f_getint 
call f_getint
s4 = a0
load 18 a0
  // line: 18 -> t1 = T2 * 4 
s5 = s2 * 4
  // line: 19 -> T1[t1] = t0 
    // store global 
loadaddr v1 t6
t6 = t6 + s5
t6 [0] = s4
  // line: 20 -> t2 = T1[t1] 
s4 = s0 + s5
s4 = s4 [0]
  // line: 21 -> T3 = T3 + t2 
s3 = s3 + s4
  // line: 22 -> T2 = T2 + 1 
s2 = s2 + 1
  // line: 23 -> goto l1 
goto l1
  // line: 24 -> l2: 
l2:
  // line: 25 -> param T3 
store a0 18
a0 = s3
  // line: 26 -> call f_putint 
call f_putint
load 18 a0
  // line: 27 -> return 0 
s11 = x0 + 0
a0 = s11
load 0 s0
load 1 s1
load 2 s2
load 3 s3
load 4 s4
load 5 s5
return
  // line: 28 -> end f_main 
end f_main
